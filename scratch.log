    switch (i + 1) {
       case 1:
       case 2:
            tempA.push({date: ta[i].date, handicap: ta[i].handicap, exception : 0, handicapIndex : ta[i].handicap, lhiIndex:54, dayIndex : ta[i].dayIndex ,rn : ta[i].rn });
       break;
       case 3: 
       	  x= parseInt(tempA[i-1].handicapIndex) - parseInt(ta[i].handicap);
       	  
       	 // except = getExcept(x);
          tempA.push({date: ta[i].date, handicap: ta[i].handicap, exception : except, handicapIndex : 0, lhiIndex:54, dayIndex : ta[i].dayIndex ,rn : ta[i].rn });
          z = ss(getLowScores(tempA));
          console.log("value of z " + JSON.stringify(z));
         tempA[i].handicapIndex = z[0].h - 2;
  
       break;
       case 4:
         x= tempA[i-1].handicapIndex - ta[i].handicap;
       	 except = getExcept(x);
       	 tempA.push({date: ta[i].date, handicap: ta[i].handicap, exception : except, handicapIndex : 0, lhiIndex:54, dayIndex : ta[i].dayIndex ,rn : ta[i].rn });
         z = ss(getLowScores(tempA));
         //console.log(z);
         tempA[i].handicapIndex = z[0].h - 1;
       break;
       case 5:
         x= tempA[i-1].handicapIndex - ta[i].handicap;
       	 except = getExcept(x);
       	 tempA.push({date: ta[i].date, handicap: ta[i].handicap, exception : except, handicapIndex : 0, lhiIndex:54, dayIndex : ta[i].dayIndex ,rn : ta[i].rn });
         z = ss(getLowScores(tempA));
         tempA[i].handicapIndex = z[0].h;
       break;
       case 6:
         x= tempA[i-1].handicapIndex - ta[i].handicap;
        // console.log(" exception number " + x + " first [0] of tempA.hi " + tempA[0].handicapIndex + "  handicap from previous iteration " +  ta[i].handicap + "  i value " + i);
       	 except = getExcept(x);
       	 tempA.push({date: ta[i].date, handicap: ta[i].handicap, exception : except, handicapIndex : 0, lhiIndex:54, dayIndex : ta[i].dayIndex ,rn : ta[i].rn });
         z = ss(getLowScores(tempA));
         tempA[i].handicapIndex = (z[0].h+z[1].h) / 2 -1;

       break;
       case 7:
       case 8:
         x= tempA[i-1].handicapIndex - ta[i].handicap;
 
       	 except = getExcept(x);
       	 tempA.push({date: ta[i].date, handicap: ta[i].handicap, exception : except, handicapIndex : 0, lhiIndex:54, dayIndex : ta[i].dayIndex ,rn : ta[i].rn });
         z = ss(getLowScores(tempA));
         tempA[i].handicapIndex = (z[0].h+z[1].h) / 2 ;
       
       break;
       case 9:
       case 10:
       case 11:
         x= tempA[i-1].handicapIndex - ta[i].handicap;
   
       	 except = getExcept(x);
       	 tempA.push({date: ta[i].date, handicap: ta[i].handicap, exception : except, handicapIndex : 0, lhiIndex:54, dayIndex : ta[i].dayIndex ,rn : ta[i].rn });
         z = ss(getLowScores(tempA));
         tempA[i].handicapIndex = (z[0].h+z[1].h+z[2].h) / 3;
       break;
       case 12:
       case 13:
       case 14:
         x= tempA[i-1].handicapIndex - ta[i].handicap;
     //   console.log(" exception number " + x + " first [i-1] of tempA.hi " + tempA[i-1].handicapIndex + "  handicap from previous iteration " +  ta[i].handicap + "  i value " + i);
       	 except = getExcept(x);
       	 tempA.push({date: ta[i].date, handicap: ta[i].handicap, exception : except, handicapIndex : 0, lhiIndex:54, dayIndex : ta[i].dayIndex ,rn : ta[i].rn });
         z = ss(getLowScores(tempA));
         tempA[i].handicapIndex = (z[0].h+z[1].h+z[2].h+z[3].h) / 4 ;
    
       break;
       
       case 15:
       case 16:
         x= tempA[i-1].handicapIndex - ta[i].handicap;
      //   console.log(" exception number " + x + " first [i-1] of tempA.hi " + tempA[i-1].handicapIndex + "  handicap from previous iteration " +  ta[i].handicap + "  i value " + i);
       	 except = getExcept(x);
       	 tempA.push({date: ta[i].date, handicap: ta[i].handicap, exception : except, handicapIndex : 0, lhiIndex:54, dayIndex : ta[i].dayIndex ,rn : ta[i].rn });
         z = ss(getLowScores(tempA));
         tempA[i].handicapIndex = (z[0].h+z[1].h+z[2].h+z[3].h+z[4].h) / 5 ;
       
       break;
       case 17:
       case 18:
         x= tempA[i-1].handicapIndex - ta[i].handicap;
        // console.log(" exception number " + x + " first [i-1] of tempA.hi " + tempA[i-1].handicapIndex + "  handicap from previous iteration " +  ta[i].handicap + "  i value " + i);
       	 except = getExcept(x);
       	 tempA.push({date: ta[i].date, handicap: ta[i].handicap, exception : except, handicapIndex : 0, lhiIndex:54, dayIndex : ta[i].dayIndex ,rn : ta[i].rn });
         z = ss(getLowScores(tempA));
         tempA[i].handicapIndex = (z[0].h+z[1].h+z[2].h+z[3].h+z[4].h+z[5].h) / 6 ;
              
       break;
       case 19:
         x= tempA[i-1].handicapIndex - ta[i].handicap;
       // console.log(" exception number " + x + " first [i-1] of tempA.hi " + tempA[i-1].handicapIndex + "  handicap from previous iteration " +  ta[i].handicap + "  i value " + i);
       	 except = getExcept(x);
       	 tempA.push({date: ta[i].date, handicap: ta[i].handicap, exception : except, handicapIndex : 0, lhiIndex:54, dayIndex : ta[i].dayIndex ,rn : ta[i].rn });
         z = ss(getLowScores(tempA));
         tempA[i].handicapIndex = (z[0].h+z[1].h+z[2].h+z[3].h+z[4].h+z[5].h+z[6].h) / 7 ;
        
       
       break;
       default:
      // console.log("  ");
      // console.log(" *********************");
      // console.log("  Value of i " + i);
      
       let ind = i-1;
       let counter ;
       //if(i==19) {counter = 18}
       if(i==19) {counter = 0}
       else counter = i - 20; 
       let lhiArr = [];
       //console.log("Ind: " + ind);
       
       let cd = new Date(tempA[ind].date);    // i is 19, ind is 18.  date of cd should be may 15
       
      // console.log(" value of ind " + ind  +  "   value of counter  " + counter);
       
       while(ind >= counter) {  
      
       let prev = new Date(tempA[ind].date);
       
      // let ccdd = cd.getTime() - lhiTimeGap;
      // console.log("value of ind: " + ind + " cd: " + cd + " prev: " + prev); 
         if(((cd.getTime() - lhiTimeGap) -prev.getTime()) < 0) {
     // console.log(" pushing in values if within 365 days. number used to calc LHI. Uses ind to get prev 19  " + tempA[ind].handicapIndex);
           lhiArr.push(tempA[ind].handicapIndex);
           
         }
        // else break;
         
       ind --;
       }
       //console.log("  lhiArr values... collects all handicap indexes for 1 year time frame  "  + JSON.stringify(lhiArr));
         x= tempA[i-1].handicapIndex - ta[i].handicap;
         
       	 except = getExcept(x);
       	 
       //	console.log( "  exceptions being calculated....handicap of score compared to previous HI: " + except); 
       	 
       	 let templhi=null; 
       	 
       	 if(lhiArr.length) {
       //	 console.log("lhrArr has length: " + lhiArr.length);
       	 templhi = Math.min.apply(null, lhiArr)
       	 
       	 };
       	 
       	 
       	 tempA.push({date: ta[i].date, handicap: ta[i].handicap, exception : except, handicapIndex : 0, lhiIndex: templhi, dayIndex : ta[i].dayIndex ,rn : ta[i].rn });
         z = ss(getLowScores(tempA));
         let temphandicap = (z[0].h+z[1].h+z[2].h+z[3].h+z[4].h+z[5].h+z[6].h+z[7].h) / 8 ;
         // once soft and hard cap figured out, formula below has to change.
        // console.log("  all 20 counting handicap scores :  " + JSON.stringify(z));
        // console.log("  should be 8 lowest scores sorted low to high " + z[0] + " " + z[1] + " " +z[2] + " " + z[3] + " " + z[4] + " " + z[5] + " " +z[6] + " " + z[7]);
        // console.log("  after running throuhg getLowScores which builds 20 prev scores then sorted through ss, handicap after posted round   " + temphandicap); 
         
         let temphdiff;
         if(templhi) {temphdiff = temphandicap - templhi}
         else {temphdiff = 0}
         if(temphdiff > 5) {
          // console.log("hard cap occurred because handicap for this round exceed 5 better than lhi: " + temphdiff);
           tempA[i].handicapIndex = templhi + 5; 
         }
         else if (temphdiff < 5 && temphdiff > 3) {
          // console.log("soft cap occurred. temphdiff is : " + temphdiff);
           tempA[i].handicapIndex = templhi + (((temphdiff - 3) / 2) + 3); 
         }
         else tempA[i].handicapIndex = temphandicap ;
         
         if(tempA[i].handicapIndex < tempA[i].lhiIndex) {tempA[i].lhiIndex = tempA[i].handicapIndex  }
         
        // console.log("  final posted entry for the tempA array: " + JSON.stringify(tempA[i]));
       
       // have to look at soft and hard caps against lowhandicapindex
       // have to get 20 latest scores only
       
     
     }
     }
  